@model PracticePerfect.Models.Patient

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Patient</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.FileNumber, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FileNumber)
                @Html.ValidationMessageFor(model => model.FileNumber)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Secret, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Secret)
                @Html.ValidationMessageFor(model => model.Secret)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Reminder, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Reminder)
                @Html.ValidationMessageFor(model => model.Reminder)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title)
                @Html.ValidationMessageFor(model => model.Title)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName)
                @Html.ValidationMessageFor(model => model.FirstName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Surname, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Surname)
                @Html.ValidationMessageFor(model => model.Surname)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdNumber, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IdNumber)
                @Html.ValidationMessageFor(model => model.IdNumber)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BirthDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BirthDate)
                @Html.ValidationMessageFor(model => model.BirthDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmailAddress, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmailAddress)
                @Html.ValidationMessageFor(model => model.EmailAddress)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContactNumber, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContactNumber)
                @Html.ValidationMessageFor(model => model.ContactNumber)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CellNumber, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CellNumber)
                @Html.ValidationMessageFor(model => model.CellNumber)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address1, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address1)
                @Html.ValidationMessageFor(model => model.Address1)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address2, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address2)
                @Html.ValidationMessageFor(model => model.Address2)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address3, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address3)
                @Html.ValidationMessageFor(model => model.Address3)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address4, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address4)
                @Html.ValidationMessageFor(model => model.Address4)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConsultationFee, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConsultationFee)
                @Html.ValidationMessageFor(model => model.ConsultationFee)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CurrentBalance, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CurrentBalance)
                @Html.ValidationMessageFor(model => model.CurrentBalance)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
